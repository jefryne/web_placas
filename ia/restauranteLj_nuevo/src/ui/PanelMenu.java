/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;
import java.sql.*;
import clases.DataBase;
import java.awt.Color;
import java.awt.Image;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;
import java.text.NumberFormat;
import java.text.ParseException;
import java.text.NumberFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author INSTRUCTOR
 */
public class PanelMenu extends javax.swing.JPanel {
    DefaultTableModel modelo;
    NumberFormat formatoMoneda;
    DataBase data_base;
    int numero_mesa;
    List<Integer> listaDeEnteros; 
    List<Integer> cantidad_platos;
    List<Integer> precio_platos;
    List<Integer> sub_total;
    List<String> nombre_platos;
    String texto_items;
    Mesas mesa;
    Locale locale;
    int total;
    Number number;
    NumberFormat formatoMonedaNumber;
    public PanelMenu(DataBase data_base,int numero_mesa, Mesas mesa) {
        this.mesa = mesa;
        this.numero_mesa = numero_mesa;
        this.data_base = data_base;
        this.listaDeEnteros = new ArrayList<>();
        this.cantidad_platos = new ArrayList<>();
        this.precio_platos = new ArrayList<>();
        this.nombre_platos = new ArrayList<>();
        this.sub_total = new ArrayList<>();
        texto_items="";
        total = 0;
        formatoMonedaNumber = NumberFormat.getCurrencyInstance(new Locale("es", "CO"));
        locale = new Locale("es", "CO");
        initComponents();
        alternInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        panel_items = new javax.swing.JPanel();
        l_numero_mesa = new javax.swing.JLabel();
        l_items = new javax.swing.JLabel();
        l_pedido = new javax.swing.JLabel();
        l_respuesta = new javax.swing.JLabel();
        limpiar_pedido = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel5.setText("MENÃš");

        jTable1.setFont(new java.awt.Font("Segoe Print", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "ID", "PLATO", "PRECIO"
            }
        ));
        jTable1.setColumnSelectionAllowed(true);
        jTable1.setOpaque(false);
        jScrollPane1.setViewportView(jTable1);

        l_items.setFont(new java.awt.Font("Segoe Print", 1, 10)); // NOI18N
        l_items.setToolTipText("");
        l_items.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout panel_itemsLayout = new javax.swing.GroupLayout(panel_items);
        panel_items.setLayout(panel_itemsLayout);
        panel_itemsLayout.setHorizontalGroup(
            panel_itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panel_itemsLayout.createSequentialGroup()
                .addComponent(l_numero_mesa, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panel_itemsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_items, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(58, Short.MAX_VALUE))
        );
        panel_itemsLayout.setVerticalGroup(
            panel_itemsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panel_itemsLayout.createSequentialGroup()
                .addComponent(l_numero_mesa, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_items, javax.swing.GroupLayout.DEFAULT_SIZE, 935, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane2.setViewportView(panel_items);

        l_pedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                guardarPedido(evt);
            }
        });

        limpiar_pedido.setText("jLabel1");
        limpiar_pedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                limpiarPedido(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_respuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(limpiar_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 422, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(l_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(l_respuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(limpiar_pedido, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void guardarPedido(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_guardarPedido

        boolean respuesta = data_base.crearFactura(total, numero_mesa, mesa.usuario_activo);
        if(respuesta){
            int id_factura = Integer.parseInt(data_base.ultimaFatura()) ;
            System.out.println(id_factura);
            for(int i=0;i<listaDeEnteros.size();i++){
                data_base.guardarPedido(id_factura, cantidad_platos.get(i), listaDeEnteros.get(i),sub_total.get(i) );
            }
            data_base.editarMesa(numero_mesa,"ocupada");
            l_respuesta.setText("Pedido realizado");
        }

    }//GEN-LAST:event_guardarPedido

    private void limpiarPedido(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_limpiarPedido
        this.listaDeEnteros.clear(); 
        this.cantidad_platos.clear();
        this.precio_platos.clear();
        this.sub_total.clear();
        this.nombre_platos.clear();
        this.texto_items="";
        this.total=0;
        this.l_items.setText("");
        this.panel_items.revalidate();
        this.panel_items.repaint();
        this.revalidate();
        this.repaint();
    }//GEN-LAST:event_limpiarPedido
    
    
    public void alternInitComponents(){
        Image btn_ok = getToolkit().createImage(ClassLoader.getSystemResource("imagenes/btn_ok.png"));
        btn_ok = btn_ok.getScaledInstance(50, 50, Image.SCALE_SMOOTH);
        l_pedido.setIcon(new ImageIcon(btn_ok));
        l_numero_mesa.setText( "N mesa: "+this.numero_mesa );
        modelo = (DefaultTableModel) jTable1.getModel();
        jTable1.getTableHeader().setReorderingAllowed(false);
        jTable1.setDefaultEditor(Object.class, null);
        jTable1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                int selectedRow = jTable1.getSelectedRow();
                if (selectedRow != -1) {
                    Object id_plato = modelo.getValueAt(selectedRow, 0); // Columna 1
                    Object nombre_plato = modelo.getValueAt(selectedRow, 1); // Columna 2
                    Object precio_plato = modelo.getValueAt(selectedRow, 2); // Columna 2

                    try {
                        number = formatoMoneda.parse((String) precio_plato);
                    } catch (ParseException ex) {
                        Logger.getLogger(PanelMenu.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    int precio_plato_int = number.intValue();
                    int id_plato_int = Integer.parseInt((String) id_plato); 
                    if(listaDeEnteros.size()==0){
                        listaDeEnteros.add(id_plato_int);
                        cantidad_platos.add(1);
                        nombre_platos.add((String) nombre_plato);
                        precio_platos.add(precio_plato_int);
                        sub_total.add(precio_plato_int);
                    }else{
                        boolean no_exite = true;
                        for(int i=0;i<listaDeEnteros.size();i++){
                            if(listaDeEnteros.get(i) == id_plato_int){
                                no_exite=false;
                                int valor_nuevo = (cantidad_platos.get(i)+1);
                                cantidad_platos.set(i,valor_nuevo);
                                int v_sub_total = (cantidad_platos.get(i)*precio_platos.get(i));
                                sub_total.set(i,v_sub_total);
                            }
                        }
                        if(no_exite){
                            listaDeEnteros.add(id_plato_int);
                            cantidad_platos.add(1);
                            nombre_platos.add((String) nombre_plato);
                            precio_platos.add(precio_plato_int);
                            sub_total.add(precio_plato_int);
                        }
                    }
                    texto_items="";
                    total =0;
                    for(int i=0;i<listaDeEnteros.size();i++){  
                        String color = "";
                        if(i%2==0){
                            color = "blue";
                        }else{
                            color = "violet";
                        }
                        total += sub_total.get(i);
                        double subtotal_double = sub_total.get(i);

                        
                        

                        String formato_subtotal = formatoMoneda.format(subtotal_double);
                        texto_items +=  "<div style='border: 1px solid black; padding: 5px;'>PLATO: "+ nombre_platos.get(i) + " CANTIDAD: " + cantidad_platos.get(i)+ " subtotal: " + formato_subtotal + "</div><br>";
                    }
                    double total_double = total;
                    String formato_total = formatoMoneda.format(total_double);
                    texto_items +=  "<div style='border: 1px solid black; padding: 5px;'>TOTAL: "+formato_total+"</div><br>";
                    String textoFinal = "";
                    texto_items = "<html>" + texto_items + "</html>";
                    l_items.setText(texto_items);
                }
                revalidate();
                mesa.repaint();
                mesa.revalidate();
            }
        });

            



        cargarPlatos();

        this.setVisible(true);
        this.revalidate();
    }
    
    public void cargarPlatos(){
        ResultSet listado = this.data_base.consultaGeneral("platos");
        if(listado != null){
            try {
                modelo.setRowCount(0);
                do{
                    String id_plato = listado.getString("id_plato");
                    String nombre = listado.getString("nombre");
                    String precio = listado.getString("precio");
                    formatoMoneda = NumberFormat.getCurrencyInstance(locale);
                    double precio_double = Double.parseDouble(precio);
                    String formato_precio = formatoMoneda.format(precio_double);
                    Object[] fila = new Object[]{ id_plato, nombre, formato_precio};
                    modelo.addRow(fila);
                }while(listado.next());
            } catch (SQLException ex) {
                System.out.println("Error al extraer datos: "+ex.getMessage());
            }
        }else{
            System.out.println("LISTA VACIA");
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel l_items;
    private javax.swing.JLabel l_numero_mesa;
    private javax.swing.JLabel l_pedido;
    private javax.swing.JLabel l_respuesta;
    private javax.swing.JLabel limpiar_pedido;
    private javax.swing.JPanel panel_items;
    // End of variables declaration//GEN-END:variables
}
