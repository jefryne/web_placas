/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui;

import clases.DataBase;
import java.awt.Color;
import java.awt.Image;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.*;
import java.text.NumberFormat;
import java.util.Locale;
import javax.swing.border.Border;
import javax.swing.border.EmptyBorder;
import java.text.NumberFormat;
import java.util.Locale;
import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.Element;
import com.itextpdf.text.FontFactory;
import com.itextpdf.text.Paragraph;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.Font;
import java.io.FileOutputStream;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.PdfWriter;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;


/**
 *
 * @author INSTRUCTOR
 */
public class PanelVerPedido extends javax.swing.JPanel {

    DataBase data_base;
    Mesas mesas;
    int n_factura;
    String total;
    NumberFormat formatoMoneda;
    int cambio_a_dar;
    Locale locale;
    public PanelVerPedido(DataBase data_base,Mesas mesas,int n_factura) {
        this.mesas = mesas;
        this.n_factura = n_factura;
        this.data_base = data_base;
        this.cambio_a_dar = 0;
        total = "";
        initComponents();
        alternInitComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        l_total = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        c_dinero_recibido = new javax.swing.JTextField();
        l_finPedido = new javax.swing.JLabel();
        l_cambio = new javax.swing.JLabel();
        l_cambio1 = new javax.swing.JLabel();
        l_respuesta = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel1 = new javax.swing.JPanel();
        l_detalle_factura = new javax.swing.JLabel();
        l_factura_img = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setOpaque(false);

        jLabel5.setFont(new java.awt.Font("Segoe Print", 1, 36)); // NOI18N
        jLabel5.setText("VER PEDIDO");

        jLabel1.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel1.setText("FLUJO DE DINERO");

        l_total.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        l_total.setText("TOTAL:");

        jLabel3.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        jLabel3.setText("DINERO RECIBIDO:");

        c_dinero_recibido.setFont(new java.awt.Font("Segoe Print", 0, 14)); // NOI18N
        c_dinero_recibido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                c_dinero_recibidoActionPerformed(evt);
            }
        });
        c_dinero_recibido.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                generarCambio(evt);
            }
        });

        l_finPedido.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                finalizarFactura(evt);
            }
        });

        l_cambio.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N

        l_cambio1.setFont(new java.awt.Font("Segoe Print", 1, 14)); // NOI18N
        l_cambio1.setText("CAMBIO:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(l_cambio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(l_cambio1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_finPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(168, 168, 168))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l_total, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(l_respuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(40, 40, 40)))
                            .addComponent(c_dinero_recibido, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_respuesta, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(l_total)
                .addGap(12, 12, 12)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(c_dinero_recibido, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(13, 13, 13)
                        .addComponent(l_finPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(l_cambio1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(l_cambio, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(430, Short.MAX_VALUE))
        );

        l_detalle_factura.setVerticalAlignment(javax.swing.SwingConstants.TOP);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_detalle_factura, javax.swing.GroupLayout.DEFAULT_SIZE, 348, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(l_detalle_factura, javax.swing.GroupLayout.DEFAULT_SIZE, 771, Short.MAX_VALUE)
                .addContainerGap())
        );

        jScrollPane1.setViewportView(jPanel1);

        l_factura_img.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pdfFactura(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 366, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(78, 78, 78)
                .addComponent(jLabel5)
                .addGap(191, 191, 191)
                .addComponent(l_factura_img, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(l_factura_img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 789, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void c_dinero_recibidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_c_dinero_recibidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_c_dinero_recibidoActionPerformed

    private void finalizarFactura(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_finalizarFactura
        ResultSet respuesta =  data_base.buscarFactura(n_factura);
        if(respuesta != null){
            try {    
                String estado = respuesta.getString("estado");
                String id_mesa = respuesta.getString("id_mesa");
                if(estado.equals("pendiente")){
                    String dinero_recibido = c_dinero_recibido.getText();
                    if( dinero_recibido != null && !"".equals(dinero_recibido)){
                        data_base.editarFactura(Integer.parseInt(dinero_recibido), cambio_a_dar, n_factura);
                        
                        data_base.editarMesa(Integer.parseInt(id_mesa),"desocupada");
                        l_respuesta.setText("ya puedes imprimir");
                    }
                }else{
                    l_respuesta.setText("no se puede modicar");
                }
            } catch (SQLException ex) {
                Logger.getLogger(PanelVerPedido.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
    }//GEN-LAST:event_finalizarFactura

    private void generarCambio(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_generarCambio
        String dinero_recibido = c_dinero_recibido.getText();
        if(dinero_recibido != null && dinero_recibido != ""){
            int int_dinero_recibido = Integer.parseInt(dinero_recibido);
            int int_total = Integer.parseInt(total);
            cambio_a_dar = int_dinero_recibido - int_total;
            double precio_double = cambio_a_dar;
            String formatoMonedaPrecio = formatoMoneda.format(precio_double);
            l_cambio.setText(formatoMonedaPrecio);
        }
    }//GEN-LAST:event_generarCambio

    private void pdfFactura(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pdfFactura
         String fileName = "factura.pdf";

       try {
            Document document = new Document();
            PdfWriter.getInstance(document, new FileOutputStream(fileName));
            document.open();

            // Añadir título con estilo
             com.itextpdf.text.Font titleFont = FontFactory.getFont(FontFactory.HELVETICA_BOLD, 18);
            Paragraph title = new Paragraph("Factura", titleFont);
            title.setAlignment(Element.ALIGN_CENTER);
            document.add(title);

            document.add(new Paragraph("\n"));

            // Crear una tabla para los detalles de los ítems
            PdfPTable table = new PdfPTable(4);
            table.setWidthPercentage(100);
            table.addCell("Plato");
            table.addCell("Cantidad");
            table.addCell("Precio");
            table.addCell("Subtotal");
            ResultSet listado = this.data_base.bucarItems(n_factura);
            if(listado != null){
                try {
                    locale = new Locale("es", "CO");
                    formatoMoneda = NumberFormat.getCurrencyInstance(locale);
                    do{
                    String nombre = listado.getString("nombre");
                    String precio = listado.getString("precio");
                    String cantidad = listado.getString("cantidad");
                    String sub_total = listado.getString("sub_total");
                    
                    double precio_double= Double.parseDouble(precio);
                    String precio_formato = formatoMoneda.format(precio_double);
                    double sub_total_double= Double.parseDouble(sub_total);
                    String sub_total_formato = formatoMoneda.format(sub_total_double);
                    table.addCell(nombre);
                    table.addCell(cantidad);
                    table.addCell(precio_formato);
                    table.addCell(sub_total_formato);

                    }while(listado.next());
                    document.add(table);
                    document.add(new Paragraph("\n"));
                    double total_double= Double.parseDouble(total);
                    String total_formato = formatoMoneda.format(total_double);
                    ResultSet datos_factura = data_base.buscarFactura(n_factura);
                    String dinero_recibido = datos_factura.getString("dinero_recibido");
                    String cambio = datos_factura.getString("cambio");
                    double dinero_recibido_double = Double.parseDouble(dinero_recibido);
                    String dinero_recibido_formato = formatoMoneda.format(dinero_recibido_double);
                    double cambio_double = Double.parseDouble(cambio);
                    String cambio_formato = formatoMoneda.format(cambio_double);
                    Paragraph paymentDetails = new Paragraph("\nDINERO RECIBIDO: "+dinero_recibido_formato+"\nCAMBIO: "+cambio_formato+"\nTOTAL: "+total_formato+"\n\n\nFirma: __________________");
                    document.add(paymentDetails);
                    document.close();
                    System.out.println("Factura generada exitosamente.");
                    openPdfWithDefaultViewer(fileName);
                } catch (SQLException ex) {
                    System.out.println("Error al extraer datos: "+ex.getMessage());
                }
            }else{
                System.out.println("LISTA VACIA");
            }
        } catch (DocumentException e) {
            e.printStackTrace();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_pdfFactura
    
    
    public void alternInitComponents(){
        Image factura_img = getToolkit().createImage(ClassLoader.getSystemResource("imagenes/factura.png"));
        factura_img = factura_img.getScaledInstance(60, 60, Image.SCALE_SMOOTH);
        l_factura_img.setIcon(new ImageIcon(factura_img));
        Image btn_fin_pedido = getToolkit().createImage(ClassLoader.getSystemResource("imagenes/btn_fin_pedido.png"));
        btn_fin_pedido = btn_fin_pedido.getScaledInstance(60, 60, Image.SCALE_SMOOTH);
        l_finPedido.setIcon(new ImageIcon(btn_fin_pedido));
       cargarItems();

        this.setVisible(true);
        this.revalidate();
        
        
    }
    
    public void cargarItems(){
        ResultSet listado = this.data_base.bucarItems(n_factura);
        if(listado != null){
            String texto_items = "";
            total = "";
            try {
                do{
                    String nombre = listado.getString("nombre");
                    String precio = listado.getString("precio");
                    String cantidad = listado.getString("cantidad");
                    String sub_total = listado.getString("sub_total");
                    total = listado.getString("total");
                    double numero = Double.parseDouble(sub_total);
                    double precio_double = Double.parseDouble(sub_total);

                    Locale locale = new Locale("es", "CO");
                    formatoMoneda = NumberFormat.getCurrencyInstance(locale);

                    String formatoMonedaString = formatoMoneda.format(numero);
                    String formatoMonedaPrecio = formatoMoneda.format(precio_double);

                    texto_items +=  "<div style='border: 1px solid black; padding: 5px;'>PLATO: "+ nombre + " CANTIDAD: " + cantidad+ " PRECIO: "+formatoMonedaPrecio+" SUBTOTAL: " +formatoMonedaString+ "</div><br>";

                }while(listado.next());
                double total_double = Double.parseDouble(total);
                String total_formato = formatoMoneda.format(total_double);
                texto_items +=  "<div style='border: 1px solid black; padding: 5px;'>TOTAL: "+total_formato+"</div><br>";
                String textoFinal = "";
                texto_items = "<html>" + texto_items + "</html>";
                l_total.setText("<html><div style='border: 1px solid black; padding: 5px;'>TOTAL: "+total_formato+"</div></html>");
                l_detalle_factura.setText(texto_items);
            } catch (SQLException ex) {
                System.out.println("Error al extraer datos: "+ex.getMessage());
            }
        }else{
            System.out.println("LISTA VACIA");
        }
    }
    
private static void openPdfWithDefaultViewer(String pdfFilePath) throws IOException {
    String os = System.getProperty("os.name").toLowerCase();

    if (os.contains("win")) {
        Runtime.getRuntime().exec("cmd /c start " + pdfFilePath);
    } else if (os.contains("mac")) {
        Runtime.getRuntime().exec("open " + pdfFilePath);
    } else if (os.contains("nix") || os.contains("nux") || os.contains("aix")) {
        Runtime.getRuntime().exec("xdg-open " + pdfFilePath);
    }
}


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField c_dinero_recibido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel l_cambio;
    private javax.swing.JLabel l_cambio1;
    private javax.swing.JLabel l_detalle_factura;
    private javax.swing.JLabel l_factura_img;
    private javax.swing.JLabel l_finPedido;
    private javax.swing.JLabel l_respuesta;
    private javax.swing.JLabel l_total;
    // End of variables declaration//GEN-END:variables
}
